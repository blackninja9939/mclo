<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
	<Type Name="mclo::basic_string_buffer&lt;char,*&gt;">
		<AlternativeType Name="mclo::basic_string_buffer&lt;char8_t,*&gt;"/>
		<DisplayString>{m_data._Elems,s}</DisplayString>
		<StringView>m_data._Elems,s</StringView>
		<Expand>
			<Item Name="[size]" ExcludeView="simple">m_length</Item>
			<Item Name="[capacity]" ExcludeView="simple">max_string_size</Item>
			<ArrayItems>
				<Size>m_length</Size>
				<ValuePointer>m_data._Elems</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<Type Name="mclo::basic_string_buffer&lt;wchar_t,*&gt;">
		<AlternativeType Name="mclo::basic_string_buffer&lt;unsigned short,*&gt;"/>
		<AlternativeType Name="mclo::basic_string_buffer&lt;char16_t,*&gt;"/>
		<DisplayString>{m_data._Elems,su}</DisplayString>
		<StringView>m_data._Elems,su</StringView>
		<Expand>
			<Item Name="[size]" ExcludeView="simple">m_length</Item>
			<Item Name="[capacity]" ExcludeView="simple">max_string_size</Item>
			<ArrayItems>
				<Size>m_length</Size>
				<ValuePointer>m_data._Elems</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<Type Name="mclo::basic_string_buffer&lt;char32_t,*&gt;">
		<DisplayString>{m_data._Elems,s32}</DisplayString>
		<StringView>m_data._Elems,s32</StringView>
		<Expand>
			<Item Name="[size]" ExcludeView="simple">m_length</Item>
			<Item Name="[capacity]" ExcludeView="simple">max_string_size</Item>
			<ArrayItems>
				<Size>m_length</Size>
				<ValuePointer>m_data._Elems</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<Type Name="mclo::tagged_ptr&lt;*,*&gt;">
		<Intrinsic Name="ptr_bits" Expression="( m_bits &amp; ptr_mask ) >> free_upper_bits"/>
		<Intrinsic Name="tag_bits" Expression="m_bits &amp; tag_mask"/>
		<Intrinsic Name="ptr" Expression="($T1*)ptr_bits()"/>
		<Intrinsic Optional="true" Name="tag" Expression="($T2)tag_bits()"/>
		<SmartPointer Usage="Minimal">ptr()</SmartPointer>
		<DisplayString Condition="m_bits == 0">empty</DisplayString>
		<DisplayString Condition="ptr_bits() != 0 &amp;&amp; tag_bits() == 0">tagged_ptr {*ptr()}</DisplayString>
		<DisplayString Condition="ptr_bits() == 0 &amp;&amp; tag_bits() != 0">tagged_ptr nullptr [tag: {tag()}]</DisplayString>
		<DisplayString Condition="ptr_bits() != 0 &amp;&amp; tag_bits() != 0">tagged_ptr {*ptr()} [tag: {tag()}]</DisplayString>
		<Expand>
			<Item Condition="ptr_bits() != 0" Name="[ptr]">ptr()</Item>
			<Item Condition="tag_bits() != 0" Name="[tag]">tag()</Item>
		</Expand>
	</Type>

	<Type Name="mclo::small_optional&lt;*&gt;">
		<DisplayString Optional="true" Condition="m_value == invalid">nullopt</DisplayString>
		<DisplayString Optional="true" Condition="natvis_type == mclo::detail::small_optional_natvis_type::integer">{($T1)m_value}</DisplayString>
		<DisplayString Optional="true" Condition="natvis_type == mclo::detail::small_optional_natvis_type::floating_point">{m_debugger_value}</DisplayString>
	</Type>

	<Type Priority="MediumHigh" Name="mclo::small_optional&lt;std::basic_string_view&lt;*,*&gt;&gt;">
		<DisplayString Condition="m_value == invalid">nullopt</DisplayString>
		<DisplayString>{(const $T1*)m_value,[m_size]}</DisplayString>
	</Type>

	<Type Name="mclo::bitset&lt;*,*&gt;">
		<DisplayString>{{ size={$T1} }}</DisplayString>
		<Expand>
			<IndexListItems>
				<Size>$T1</Size>
				<ValueNode>(m_container[$i / bits_per_value] &gt;&gt; ($i % bits_per_value)) &amp; 1,d</ValueNode>
			</IndexListItems>
		</Expand>
	</Type>

	<Type Name="mclo::dynamic_bitset&lt;*&gt;">
		<DisplayString>{{ size={m_size} }}</DisplayString>
		<Expand>
			<IndexListItems>
				<Size>m_size</Size>
				<ValueNode>(m_container[$i / bits_per_value] &gt;&gt; ($i % bits_per_value)) &amp; 1,d</ValueNode>
			</IndexListItems>
		</Expand>
	</Type>

	<Type Name="mclo::enum_map&lt;*,*,*&gt;">
		<Intrinsic Name="size" Expression="(size_t)$T3"/>
		<DisplayString>{{ size={size()} }}</DisplayString>
		<Expand>
			<CustomListItems>
				<Variable Name="i" InitialValue="0"/>
				<Size>size()</Size>
				<Loop>
					<Item Name="{($T1)i}">m_container[i]</Item>
					<Exec>i++</Exec>
				</Loop>
			</CustomListItems >
		</Expand>
	</Type>

	<Type Name="mclo::small_vector_base&lt;*&gt;">
		<Intrinsic Name="get_internal_buffer" Expression="(std::byte*)this + offset"/>
		<Intrinsic Name="is_internal" Expression="m_data == get_internal_buffer()"/>
		<DisplayString Condition="is_internal()">{{ size={m_size} (internal) }}</DisplayString>
		<DisplayString Condition="!is_internal()">{{ size={m_size} (external) }}</DisplayString>
		<Expand>
			<Item Name="[capacity]" ExcludeView="simple">m_capacity</Item>
			<ArrayItems>
				<Size>m_size</Size>
				<ValuePointer>($T1*)m_data</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<Type Name="mclo::vec2&lt;*&gt;">
		<DisplayString>{{ x={m_data[0]}, y={m_data[1]} }}</DisplayString>
		<Expand>
			<Item Name="[x]">m_data[0]</Item>
			<Item Name="[y]">m_data[1]</Item>
		</Expand>
	</Type>

	<Type Name="mclo::vec3&lt;*&gt;">
		<DisplayString>{{ x={m_data[0]}, y={m_data[1]}, z={m_data[2]} }}</DisplayString>
		<Expand>
			<Item Name="[x]">m_data[0]</Item>
			<Item Name="[y]">m_data[1]</Item>
			<Item Name="[z]">m_data[2]</Item>
		</Expand>
	</Type>

	<Type Name="mclo::vec4&lt;*&gt;">
		<DisplayString>{{ x={m_data[0]}, y={m_data[1]}, z={m_data[2]}, z={m_data[3]} }}</DisplayString>
		<Expand>
			<Item Name="[x]">m_data[0]</Item>
			<Item Name="[y]">m_data[1]</Item>
			<Item Name="[z]">m_data[2]</Item>
			<Item Name="[w]">m_data[3]</Item>
		</Expand>
	</Type>

	<Type Name="mclo::span&lt;*&gt;">
		<Intrinsic Name="data" Expression="m_data" />
		<Intrinsic Name="size" Expression="m_size" />
		<Intrinsic Name="size_bytes" Expression="m_size * sizeof(element_type)" />
		<DisplayString>{{ size={size()} }}</DisplayString>
		<Expand>
			<ArrayItems>
				<Size>size()</Size>
				<ValuePointer>data()</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

  <Type Name="mclo::intrusive_forward_list_iterator&lt;*&gt;">
    <SmartPointer Usage="Minimal">m_data</SmartPointer>
    <DisplayString Condition="m_data == 0">end</DisplayString>
    <DisplayString Condition="m_data != 0">{**this}</DisplayString>
  </Type>

  <Type Name="mclo::intrusive_forward_list&lt;*,*&gt;">
    <Intrinsic Name="head" Expression="m_head.m_next"/>
    <DisplayString Condition="head() == 0">empty</DisplayString>
    <DisplayString Condition="head() != 0">non-empty</DisplayString>
    <Expand>
      <LinkedListItems>
        <HeadPointer>($T1*)head()</HeadPointer>
        <NextPointer>($T1*)m_next</NextPointer>
        <ValueNode>*($T1*)this</ValueNode>
      </LinkedListItems>
    </Expand>
  </Type>

  <Type Name="mclo::atomic_intrusive_forward_list&lt;*,*&gt;">
    <Intrinsic Name="head" Expression="m_head._Storage._Value"/>
    <DisplayString Condition="head() == 0">empty</DisplayString>
    <DisplayString Condition="head() != 0">non-empty</DisplayString>
    <Expand>
      <LinkedListItems>
        <HeadPointer>($T1*)head()</HeadPointer>
        <NextPointer>($T1*)m_next</NextPointer>
        <ValueNode>*($T1*)this</ValueNode>
      </LinkedListItems>
    </Expand>
  </Type>

	<Type Name="mclo::thread_local_key">
		<DisplayString>{m_key}</DisplayString>
	</Type>

	<Type Name="mclo::instanced_thread_local&lt;*&gt;">
		<DisplayString>{{ key={m_key} }}</DisplayString>
		<Expand>
      <ExpandedItem>m_list</ExpandedItem>
		</Expand>
	</Type>

	<Type Name="mclo::instanced_thread_local&lt;*&gt;::iterator">
    <SmartPointer Usage="Minimal">m_data</SmartPointer>
    <DisplayString Condition="m_data == 0">end</DisplayString>
    <DisplayString Condition="m_data != 0">{(**this).m_object}</DisplayString>
	</Type>

	<Type Name="mclo::instanced_thread_local_value&lt;*&gt;">
		<DisplayString>{{ key={m_key} }}</DisplayString>
	</Type>

	<Type Name="mclo::slot_map_handle&lt;*&gt;">
		<Intrinsic Name="is_null" Expression="index == max_index + 1"/>
		<DisplayString Condition="is_null()">{{ null }}</DisplayString>
		<DisplayString Condition="!is_null()">{{ index={index} generation={generation} }}</DisplayString>
		<Expand>
			<Item Name="[index]" ExcludeView="simple">index</Item>
			<Item Name="[generation]" ExcludeView="simple">generation</Item>
			<Item Name="[combined]" ExcludeView="simple">(generation &lt;&lt; index_bits) | index</Item>
		</Expand>
	</Type>

	<Type Name="mclo::detail::dense_slot_map_data&lt;*&gt;">
		<DisplayString ExcludeView="simple">{{ size={m_size} }}</DisplayString>
		<Expand>
			<Item Name="[size]" ExcludeView="simple">m_size</Item>
			<Item Name="[capacity]" ExcludeView="simple">m_capacity</Item>
			<ArrayItems>
				<Size>m_size</Size>
				<ValuePointer>m_data</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<Type Name="mclo::dense_slot_map&lt;*&gt;">
		<DisplayString>{{ size={m_data.m_size} }}</DisplayString>
		<Expand>
			<Item Name="[slots]">m_slot_indirection.size()</Item>
			<ExpandedItem>m_data</ExpandedItem>
		</Expand>
	</Type>
  
  <Type Name="mclo::not_null&lt;*&gt;">
    <DisplayString>{*m_ptr}</DisplayString>
    <Expand>
      <ExpandedItem>m_ptr</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="mclo::string_flyweight&lt;*&gt;">
    <Intrinsic Name="header" Expression="m_handle.m_string.m_ptr"/>
    <Intrinsic Name="string" Expression="(char*)header() + sizeof(void*)"/>
    <Intrinsic Name="size" Expression="header()->m_size"/>
    <DisplayString>{string(),[size()]s}</DisplayString>
    <StringView>string(),[size()]s</StringView>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">size()</Item>
      <ArrayItems>
        <Size>size()</Size>
        <ValuePointer>string()</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
</AutoVisualizer>
